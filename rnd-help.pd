#N canvas 606 79 614 517 10;
#X obj 36 397 print;
#X msg 90 181 gamma 2 3;
#X msg 89 223 uniform;
#X msg 90 202 uniform_int 127;
#X msg 89 114 poisson 12;
#X msg 90 159 exponential 22;
#X obj 21 10 rnd;
#X msg 89 137 gaussian 0 1;
#X msg 90 266 weibull 1 1;
#X msg 89 245 pareto 1.16 1;
#X obj 36 374 rnd ranlxs 3.24323e+07;
#X msg 36 74 seed 0;
#X text 198 367 1st optional argument: name of algorithm (ranlxs \,
taus \, gfsr4). mt19937 is default. See http://www.gnu.org/software/gsl/manual/html_node/Random-number-generator-algorithms.html#Random-number-generator-algorithms
;
#X text 202 105 To sample distribution send rnd object message: <dist_name>
<param_1> ... <param_n> \, where <dist_name> can be one of following:
poisson \, gaussian \, exponential \, gamma \, uniform_int \, pareto
\, weibull \, levy_skew \, lognormal. Number of parameters depends
on used distribution. Check http://www.gnu.org/software/gsl/manual/html_node/Random-Number-Distributions.html#Random-Number-Distributions
for more details.;
#X text 105 75 seed must be int >= 0;
#X msg 88 311 levy_skew 1 1.7 0;
#X msg 89 286 lognormal 0 1;
#X text 63 9 - wrapper around gsl_rnd routines from GNU Scientific
Library - http://www.gnu.org/software/gsl/;
#X text 197 435 2nd optional argument: seed. Default is (int)abs(rand*MAX_INT)
using C rand function.;
#X connect 1 0 10 0;
#X connect 2 0 10 0;
#X connect 3 0 10 0;
#X connect 4 0 10 0;
#X connect 5 0 10 0;
#X connect 7 0 10 0;
#X connect 8 0 10 0;
#X connect 9 0 10 0;
#X connect 10 0 0 0;
#X connect 11 0 10 0;
#X connect 15 0 10 0;
#X connect 16 0 10 0;
